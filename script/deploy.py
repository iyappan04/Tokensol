from web3 import Web3

w3 = Web3(Web3.HTTPProvider('http://localhost:8545'))

account = w3.eth.accounts[0]

print("Account:::", account)

with open('../smartcontracts/Token.sol', 'r') as file:
    source_code = file.read()

abi = [
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_to",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_value",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "name",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "symbol",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]   

bytecode = "60806040526040518060400160405280600881526020017f4d7920546f6b656e0000000000000000000000000000000000000000000000008152505f908162000049919062000353565b506040518060400160405280600381526020017f4d595400000000000000000000000000000000000000000000000000000000008152506001908162000090919062000353565b50620f4240600255348015620000a4575f80fd5b5060025460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555062000437565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200016b57607f821691505b60208210810362000181576200018062000126565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a8565b620001f18683620001a8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200023b620002356200022f8462000209565b62000212565b62000209565b9050919050565b5f819050919050565b62000256836200021b565b6200026e620002658262000242565b848454620001b4565b825550505050565b5f90565b6200028462000276565b620002918184846200024b565b505050565b5b81811015620002b857620002ac5f826200027a565b60018101905062000297565b5050565b601f8211156200030757620002d18162000187565b620002dc8462000199565b81016020851015620002ec578190505b62000304620002fb8562000199565b83018262000296565b50505b505050565b5f82821c905092915050565b5f620003295f19846008026200030c565b1980831691505092915050565b5f62000343838362000318565b9150826002028217905092915050565b6200035e82620000ef565b67ffffffffffffffff8111156200037a5762000379620000f9565b5b62000386825462000153565b62000393828285620002bc565b5f60209050601f831160018114620003c9575f8415620003b4578287015190505b620003c0858262000336565b8655506200042f565b601f198416620003d98662000187565b5f5b828110156200040257848901518255600182019150602085019450602081019050620003db565b868310156200042257848901516200041e601f89168262000318565b8355505b6001600288020188555050505b505050505050565b6106a780620004455f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806306fdde031461005957806318160ddd1461007757806370a082311461009557806395d89b41146100c5578063a9059cbb146100e3575b5f80fd5b6100616100ff565b60405161006e919061043f565b60405180910390f35b61007f61018a565b60405161008c9190610477565b60405180910390f35b6100af60048036038101906100aa91906104ee565b610190565b6040516100bc9190610477565b60405180910390f35b6100cd6101a5565b6040516100da919061043f565b60405180910390f35b6100fd60048036038101906100f89190610543565b610231565b005b5f805461010b906105ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610137906105ae565b80156101825780601f1061015957610100808354040283529160200191610182565b820191905f5260205f20905b81548152906001019060200180831161016557829003601f168201915b505050505081565b60025481565b6003602052805f5260405f205f915090505481565b600180546101b2906105ae565b80601f01602080910402602001604051908101604052809291908181526020018280546101de906105ae565b80156102295780601f1061020057610100808354040283529160200191610229565b820191905f5260205f20905b81548152906001019060200180831161020c57829003601f168201915b505050505081565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561027a575f80fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610301919061060b565b101561030b575f80fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610357919061063e565b925050819055508060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103aa919061060b565b925050819055505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156103ec5780820151818401526020810190506103d1565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610411826103b5565b61041b81856103bf565b935061042b8185602086016103cf565b610434816103f7565b840191505092915050565b5f6020820190508181035f8301526104578184610407565b905092915050565b5f819050919050565b6104718161045f565b82525050565b5f60208201905061048a5f830184610468565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104bd82610494565b9050919050565b6104cd816104b3565b81146104d7575f80fd5b50565b5f813590506104e8816104c4565b92915050565b5f6020828403121561050357610502610490565b5b5f610510848285016104da565b91505092915050565b6105228161045f565b811461052c575f80fd5b50565b5f8135905061053d81610519565b92915050565b5f806040838503121561055957610558610490565b5b5f610566858286016104da565b92505060206105778582860161052f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105c557607f821691505b6020821081036105d8576105d7610581565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106158261045f565b91506106208361045f565b9250828201905080821115610638576106376105de565b5b92915050565b5f6106488261045f565b91506106538361045f565b925082820390508181111561066b5761066a6105de565b5b9291505056fea2646970667358221220835bc876a313f0b03d1b077f5b5dd67155c44d388d3f843754401f8817982ec764736f6c63430008160033"
    
compiled_code = w3.eth.contract(abi=abi, bytecode=bytecode)

tx_hash = compiled_code.constructor().transact({'from': account})

tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)

contract_address = tx_receipt.contractAddress

print(contract_address)

